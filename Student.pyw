# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'StudentWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import json
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_StudentWindow(object):
    elective1_subjects = [
         "History", "Geography", "Biology", "Physics", "Chemistry",
         "Computer Science", "Art & Design", "Music", "Economics", "Drama"
        ]
    
    elective2_subjects = [
         "Business Studies", "Literature", "Physical Education", "Psychology",
         "Sociology", "Civics & Citizenship", "Environmental Science", "French/Spanish (Foreign Languages)", "Information Technology"
        ]
    
    specialization_subjects = [
         "Engineering", "Medical Science", "Law", "Architectural Design",
         "Advanced Computing", "Business Management", "Performing Arts", "Creative Writing", "International Relations"
        ]
    def elective1_grade_changed(self):
        text = self.editElective1Grade.text().strip()
        
        if text:
                grade = float(self.editElective1Grade.text())
                match grade:
                        case average if average >= 100:
                                self.labelElective1Rate.setStyleSheet("color: #660000;")
                                self.labelElective1Rate.setText('Rating: INVALID')
                        case average if average >= 90:
                                self.labelElective1Rate.setStyleSheet("color: green;")
                                self.labelElective1Rate.setText('Rating: A')
                        case average if average >= 80:
                                self.labelElective1Rate.setStyleSheet("color: blue;")
                                self.labelElective1Rate.setText('Rating: B')
                        case average if average >= 60:
                                self.labelElective1Rate.setStyleSheet("color: yellow;")
                                self.labelElective1Rate.setText('Rating: C')
                        case average if average >= 50:
                                self.labelElective1Rate.setStyleSheet("color: orange;")
                                self.labelElective1Rate.setText('Rating: D')
                        case _:
                                self.labelElective1Rate.setStyleSheet("color: red;")
                                self.labelElective1Rate.setText('Rating: F')
        else:
              pass
    
    def elective2_grade_changed(self):
        text = self.editElective2Grade.text().strip()
        
        if text:
                grade = float(self.editElective2Grade.text())
                match grade:
                        case average if average >= 100:
                                self.labelElective2Rate.setStyleSheet("color: #660000;")
                                self.labelElective2Rate.setText('Rating: INVALID')
                        case average if average >= 90:
                                self.labelElective2Rate.setStyleSheet("color: green;")
                                self.labelElective2Rate.setText('Rating: A')
                        case average if average >= 80:
                                self.labelElective2Rate.setStyleSheet("color: blue;")
                                self.labelElective2Rate.setText('Rating: B')
                        case average if average >= 60:
                                self.labelElective2Rate.setStyleSheet("color: yellow;")
                                self.labelElective2Rate.setText('Rating: C')
                        case average if average >= 50:
                                self.labelElective2Rate.setStyleSheet("color: orange;")
                                self.labelElective2Rate.setText('Rating: D')
                        case _:
                                self.labelElective2Rate.setStyleSheet("color: red;")
                                self.labelElective2Rate.setText('Rating: F')
        else:
              pass

    def specialization_grade_changed(self):
        text = self.editSpecializationGrade.text().strip()
        
        if text:
                grade = float(self.editSpecializationGrade.text())
                match grade:
                        case average if average >= 100:
                                self.labelSpecializationRate.setStyleSheet("color: #660000;")
                                self.labelSpecializationRate.setText('Rating: INVALID')
                        case average if average >= 90:
                                self.labelSpecializationRate.setStyleSheet("color: green;")
                                self.labelSpecializationRate.setText('Rating: A')
                        case average if average >= 80:
                                self.labelSpecializationRate.setStyleSheet("color: blue;")
                                self.labelSpecializationRate.setText('Rating: B')
                        case average if average >= 60:
                                self.labelSpecializationRate.setStyleSheet("color: yellow;")
                                self.labelSpecializationRate.setText('Rating: C')
                        case average if average >= 50:
                                self.labelSpecializationRate.setStyleSheet("color: orange;")
                                self.labelSpecializationRate.setText('Rating: D')
                        case _:
                                self.labelSpecializationRate.setStyleSheet("color: red;")
                                self.labelSpecializationRate.setText('Rating: F')
        else:
              pass
    
    def math_grade_changed(self):
        text = self.editMathGrade.text().strip()
        
        if text:
                grade = float(self.editMathGrade.text())
                match grade:
                        case average if average >= 100:
                                self.labelMathRate.setStyleSheet("color: #660000;")
                                self.labelMathRate.setText('Rating: INVALID')
                        case average if average >= 90:
                                self.labelMathRate.setStyleSheet("color: green;")
                                self.labelMathRate.setText('Rating: A')
                        case average if average >= 80:
                                self.labelMathRate.setStyleSheet("color: blue;")
                                self.labelMathRate.setText('Rating: B')
                        case average if average >= 60:
                                self.labelMathRate.setStyleSheet("color: yellow;")
                                self.labelMathRate.setText('Rating: C')
                        case average if average >= 50:
                                self.labelMathRate.setStyleSheet("color: orange;")
                                self.labelMathRate.setText('Rating: D')
                        case _:
                                self.labelMathRate.setStyleSheet("color: red;")
                                self.labelMathRate.setText('Rating: F')
        else:
              pass

    def calc_average(self, grade_e1, grade_e2, grade_s, grade_m):
        return (grade_e1 + grade_e2 + grade_s + grade_m)/4
    
    def get_average_rating(self, average):
        match average:
            case average if average >= 90:
                return "A"
            case average if average >= 80:
                return "B"
            case average if average >= 70:
                return "C"
            case average if average >= 60:
                return "D"
            case average if average >= 50:
                return "E"
            case _:
                return "F"
    
    def generate_address(self):
        #GENERATES THE STUDENT'S ADDRESS
        name = self.editName.text()
        last_name = self.editLastName.text()
        id_number = self.editIDNumber.text()
        forum_grade = int(self.spinGrade.value())

        address = last_name[0:3].upper() + str(forum_grade) + '-' + id_number[-3:] + '@skye.edu.za'
        self.editStudentAddress.setText(address)

    def submit(self):
        #PERSONAL INFO COLLECTED
        name = self.editName.text()
        last_name = self.editLastName.text()
        id_number = self.editIDNumber.text()

        try:
                #ACADEMIC INFO COLLECTED
                mathematics = self.comboMathematics.currentText()
                mathematics_grade = float(self.editMathGrade.text())

                elective1 = self.comboElective1.currentText()
                elective1_grade = float(self.editElective1Grade.text())

                elective2 = self.comboElective2.currentText()
                elective2_grade = float(self.editElective2Grade.text())

                specialization = self.comboSpecialization.currentText()
                specialization_grade = float(self.editSpecializationGrade.text())

                forum_grade = int(self.spinGrade.value())
        except Exception as e:
             print(f'Invalid academic info: {e}')
             return

        #FORUM INFO COLLECTED
        forum_class = self.comboClass.currentText()
        student_address = self.editStudentAddress.text()

        #STORES THE STUDENTS INFORMATION
        
        full_name = name + ' ' + last_name
            
        new_student = {
                "fullname": full_name,
                "idnumber": id_number,
                "formgrade": forum_grade,
                "class": forum_class,
                "skyeaddress": student_address,
                "academic": [
                        {"subject": mathematics, "grade": mathematics_grade},
                        {"subject": elective1, "grade": elective1_grade},
                        {"subject": elective2, "grade": elective2_grade},
                        {"subject": specialization, "grade": specialization_grade}
                ]
        }
        
        try:
            with open('Student.json', 'r+') as file:
                try:
                     data = json.load(file)
                except json.JSONDecodeError as e:
                     print(f'Error processing file: {e}')
                     data = {"students": []}

                if "students" not in data:
                     data["studnets"] = []

                data["students"].append(new_student)
                file.seek(0)
                json.dump(data, file, indent=4)
                file.truncate()
                print('Operation success')

        except Exception as e:
            print(e)
            print(f'\nwith trace back: {e.with_traceback}')
        
    def reset(self):
        self.editName.clear()
        self.editLastName.clear()
        self.editIDNumber.clear()

        self.comboElective1.setCurrentIndex(0)
        self.editElective1Grade.clear()
        self.labelElective1Rate.setText('Rating: Ungraded') 
        self.labelElective1Rate.setStyleSheet("color: black;")   

        self.comboElective2.setCurrentIndex(0)
        self.editElective2Grade.clear()
        self.labelElective2Rate.setText('Rating: Ungraded')
        self.labelElective2Rate.setStyleSheet("color: black;")      
        
        self.comboSpecialization.setCurrentIndex(0)
        self.editSpecializationGrade.clear()
        self.labelSpecializationRate.setText('Rating: Ungraded')
        self.labelSpecializationRate.setStyleSheet("color: black;")   
        
        self.comboMathematics.setCurrentIndex(0)
        self.editMathGrade.clear()
        self.labelMathRate.setText('Rating: Ungraded')   
        self.labelMathRate.setStyleSheet("color: black;")   
        
        self.spinGrade.setValue(self.spinGrade.minimum())
        self.comboClass.setCurrentIndex(0)
        self.editStudentAddress.clear()

        self.labelAverage.setText('Average: ')
        self.labelAverageRating.setText('Average Rating: ')
        self.labelAverageRating.setStyleSheet("color: black;")
        self.browserVerdict.clear()
    
    def generate_report(self):
        mathematics = self.comboMathematics.currentText()
        mathematics_grade = float(self.editMathGrade.text())

        elective1 = self.comboElective1.currentText()
        elective1_grade = float(self.editElective1Grade.text())

        elective2 = self.comboElective2.currentText()
        elective2_grade = float(self.editElective2Grade.text())

        specialization = self.comboSpecialization.currentText()
        specialization_grade = float(self.editSpecializationGrade.text())

        if elective1_grade > 100 or elective1_grade < 0 or elective2_grade > 100 or elective2_grade < 0 or specialization_grade > 100 or specialization_grade < 0 or mathematics_grade > 100 or mathematics_grade < 0:
                QMessageBox.critical(self.Ui_StudentWindow, "Grading Error", "Invalid grades provided.\nPlease try again.")
        else: 
                average_grade = self.calc_average(elective1_grade, elective2_grade, specialization_grade, mathematics_grade)
                average_rate = self.get_average_rating(average_grade)

                self.labelAverage.setText(f'Average: {average_grade}%')
                self.labelAverageRating.setText(f'Average Rating: {average_rate}')
                verdict = ''

                name = self.editName.text()
                match average_grade:
                        case average_grade if average_grade >= 90:
                                self.labelAverageRating.setStyleSheet("color: green;")
                                verdict = f"Excellent: {name}'s performance has been outstanding. This student has demonstrated exceptional mastery of study material."
                        case average_grade if average_grade >= 80:
                                self.labelAverageRating.setStyleSheet("color: blue;")
                                verdict = f"Very Good: {name} has performed really well and has shown a strong understanding of subjects. A bit more focus could bring {name} even closer to excellence."
                        case average_grade if average_grade >= 70:
                                self.labelAverageRating.setStyleSheet("color: yellow;")
                                verdict = f"Good: {name} has a solid grasp of most subjects and have met the basic requirements. With some more effort, {name} could aim for a higher average grade."
                        case average_grade if average_grade >= 50:
                                self.labelAverageRating.setStyleSheet("color: orange;")
                                verdict = f"Pass: {name} has passed, but thier performance is marginal. More effort is required to improve and truly master the content. {name} needs to focus more on the material to make progress."
                        case _:
                                self.labelAverageRating.setStyleSheet("color: red;")
                                verdict =  f"Fail: Unfortunately, {name}'s performance is below the minimum requirements. Significant improvement is necessary to meet the passing criteria."
                
                self.browserVerdict.setText(verdict)
    
    def setupUi(self, StudentWindow):
        StudentWindow.setObjectName("StudentWindow")
        StudentWindow.resize(793, 519)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        StudentWindow.setFont(font)
        StudentWindow.setStyleSheet("QWidget {\n"
"    \n"
"    background-color: rgb(148, 205, 255);\n"
"}\n"
"\n"
"QMainWndow {\n"
"    \n"
"    background-color: rgb(148, 205, 255);\n"
"}\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(StudentWindow)
        self.centralwidget.setStyleSheet("QWidget {\n"
"    \n"
"    background-color: rgb(148, 205, 255);\n"
"}\n"
"\n"
"")
        self.centralwidget.setObjectName("centralwidget")
        self.grpPersonalInfo = QtWidgets.QGroupBox(self.centralwidget)
        self.grpPersonalInfo.setGeometry(QtCore.QRect(10, 0, 421, 161))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.grpPersonalInfo.setFont(font)
        self.grpPersonalInfo.setStyleSheet("font: 12pt \"Arial\";")
        self.grpPersonalInfo.setObjectName("grpPersonalInfo")
        self.labelName = QtWidgets.QLabel(self.grpPersonalInfo)
        self.labelName.setGeometry(QtCore.QRect(20, 30, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelName.setFont(font)
        self.labelName.setObjectName("labelName")
        self.editName = QtWidgets.QLineEdit(self.grpPersonalInfo)
        self.editName.setGeometry(QtCore.QRect(20, 50, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editName.setFont(font)
        self.editName.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editName.setObjectName("editName")
        self.labelLastName = QtWidgets.QLabel(self.grpPersonalInfo)
        self.labelLastName.setGeometry(QtCore.QRect(210, 30, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelLastName.setFont(font)
        self.labelLastName.setObjectName("labelLastName")
        self.editLastName = QtWidgets.QLineEdit(self.grpPersonalInfo)
        self.editLastName.setGeometry(QtCore.QRect(210, 50, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editLastName.setFont(font)
        self.editLastName.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editLastName.setObjectName("editLastName")
        self.labelIDNumber = QtWidgets.QLabel(self.grpPersonalInfo)
        self.labelIDNumber.setGeometry(QtCore.QRect(20, 100, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelIDNumber.setFont(font)
        self.labelIDNumber.setObjectName("labelIDNumber")
        self.editIDNumber = QtWidgets.QLineEdit(self.grpPersonalInfo)
        self.editIDNumber.setGeometry(QtCore.QRect(20, 120, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editIDNumber.setFont(font)
        self.editIDNumber.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editIDNumber.setObjectName("editIDNumber")
        self.grpForumInfo = QtWidgets.QGroupBox(self.centralwidget)
        self.grpForumInfo.setGeometry(QtCore.QRect(440, 0, 341, 161))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.grpForumInfo.setFont(font)
        self.grpForumInfo.setStyleSheet("font: 12pt \"Arial\";")
        self.grpForumInfo.setObjectName("grpForumInfo")
        self.labelStudentAddress = QtWidgets.QLabel(self.grpForumInfo)
        self.labelStudentAddress.setGeometry(QtCore.QRect(140, 30, 190, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelStudentAddress.setFont(font)
        self.labelStudentAddress.setObjectName("labelStudentAddress")
        self.editStudentAddress = QtWidgets.QLineEdit(self.grpForumInfo)
        self.editStudentAddress.setGeometry(QtCore.QRect(135, 50, 190, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editStudentAddress.setFont(font)
        self.editStudentAddress.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editStudentAddress.setObjectName("editStudentAddress")
        self.labelClass = QtWidgets.QLabel(self.grpForumInfo)
        self.labelClass.setGeometry(QtCore.QRect(20, 100, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelClass.setFont(font)
        self.labelClass.setObjectName("labelClass")
        self.labelGrade = QtWidgets.QLabel(self.grpForumInfo)
        self.labelGrade.setGeometry(QtCore.QRect(20, 30, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelGrade.setFont(font)
        self.labelGrade.setObjectName("labelGrade")
        self.spinGrade = QtWidgets.QSpinBox(self.grpForumInfo)
        self.spinGrade.setGeometry(QtCore.QRect(20, 50, 51, 31))
        self.spinGrade.valueChanged.connect(self.generate_address)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.spinGrade.setFont(font)
        self.spinGrade.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.spinGrade.setMinimum(10)
        self.spinGrade.setMaximum(12)
        self.spinGrade.setObjectName("spinGrade")
        self.comboClass = QtWidgets.QComboBox(self.grpForumInfo)
        self.comboClass.setGeometry(QtCore.QRect(20, 120, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.comboClass.setFont(font)
        self.comboClass.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.comboClass.setObjectName("comboClass")
        self.comboClass.addItem("")
        self.comboClass.addItem("")
        self.comboClass.addItem("")
        self.grpAcademicInfo = QtWidgets.QGroupBox(self.centralwidget)
        self.grpAcademicInfo.setGeometry(QtCore.QRect(10, 170, 421, 301))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.grpAcademicInfo.setFont(font)
        self.grpAcademicInfo.setStyleSheet("font: 12pt \"Arial\";")
        self.grpAcademicInfo.setObjectName("grpAcademicInfo")
        self.labelGradeMath = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelGradeMath.setGeometry(QtCore.QRect(210, 30, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelGradeMath.setFont(font)
        self.labelGradeMath.setObjectName("labelGradeMath")
        self.editMathGrade = QtWidgets.QLineEdit(self.grpAcademicInfo)
        self.editMathGrade.setGeometry(QtCore.QRect(210, 50, 71, 31))
        self.editMathGrade.textChanged.connect(self.math_grade_changed)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editMathGrade.setFont(font)
        self.editMathGrade.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editMathGrade.setObjectName("editMathGrade")
        self.labelElective1 = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelElective1.setGeometry(QtCore.QRect(20, 100, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelElective1.setFont(font)
        self.labelElective1.setObjectName("labelElective1")
        self.labelMath = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelMath.setGeometry(QtCore.QRect(20, 30, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelMath.setFont(font)
        self.labelMath.setObjectName("labelMath")
        self.comboMathematics = QtWidgets.QComboBox(self.grpAcademicInfo)
        self.comboMathematics.setGeometry(QtCore.QRect(20, 50, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.comboMathematics.setFont(font)
        self.comboMathematics.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.comboMathematics.setObjectName("comboMathematics")
        self.comboMathematics.addItem("")
        self.comboMathematics.addItem("")
        self.comboMathematics.addItem("")
        self.labelElective2 = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelElective2.setGeometry(QtCore.QRect(20, 170, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelElective2.setFont(font)
        self.labelElective2.setObjectName("labelElective2")
        self.labelSpecialization = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelSpecialization.setGeometry(QtCore.QRect(20, 240, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelSpecialization.setFont(font)
        self.labelSpecialization.setObjectName("labelSpecialization")
        self.comboElective1 = QtWidgets.QComboBox(self.grpAcademicInfo)
        self.comboElective1.setGeometry(QtCore.QRect(20, 120, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.comboElective1.setFont(font)
        self.comboElective1.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.comboElective1.setObjectName("comboElective1")
        self.comboElective1.clear()
        self.comboElective1.addItems(self.elective1_subjects)
        self.comboElective2 = QtWidgets.QComboBox(self.grpAcademicInfo)
        self.comboElective2.setGeometry(QtCore.QRect(20, 190, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.comboElective2.setFont(font)
        self.comboElective2.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.comboElective2.setObjectName("comboElective2")
        self.comboElective2.clear()
        self.comboElective2.addItems(self.elective2_subjects)
        self.comboSpecialization = QtWidgets.QComboBox(self.grpAcademicInfo)
        self.comboSpecialization.setGeometry(QtCore.QRect(20, 260, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.comboSpecialization.setFont(font)
        self.comboSpecialization.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.comboSpecialization.setObjectName("comboSpecialization")
        self.comboSpecialization.clear()
        self.comboSpecialization.addItems(self.specialization_subjects)
        self.labelGradeElective1 = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelGradeElective1.setGeometry(QtCore.QRect(210, 100, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelGradeElective1.setFont(font)
        self.labelGradeElective1.setObjectName("labelGradeElective1")
        self.labelGradeElective2 = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelGradeElective2.setGeometry(QtCore.QRect(210, 170, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelGradeElective2.setFont(font)
        self.labelGradeElective2.setObjectName("labelGradeElective2")
        self.labelSpecializationGrade = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelSpecializationGrade.setGeometry(QtCore.QRect(210, 240, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelSpecializationGrade.setFont(font)
        self.labelSpecializationGrade.setObjectName("labelSpecializationGrade")
        self.editElective1Grade = QtWidgets.QLineEdit(self.grpAcademicInfo)
        self.editElective1Grade.setGeometry(QtCore.QRect(210, 120, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editElective1Grade.setFont(font)
        self.editElective1Grade.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editElective1Grade.setObjectName("editElective1Grade")
        self.editElective1Grade.textChanged.connect(self.elective1_grade_changed)
        self.editElective2Grade = QtWidgets.QLineEdit(self.grpAcademicInfo)
        self.editElective2Grade.setGeometry(QtCore.QRect(210, 190, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editElective2Grade.setFont(font)
        self.editElective2Grade.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editElective2Grade.setObjectName("editElective2Grade")
        self.editElective2Grade.textChanged.connect(self.elective2_grade_changed)
        self.editSpecializationGrade = QtWidgets.QLineEdit(self.grpAcademicInfo)
        self.editSpecializationGrade.setGeometry(QtCore.QRect(210, 260, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.editSpecializationGrade.setFont(font)
        self.editSpecializationGrade.setStyleSheet("QLineEdit {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QLineEdit:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.editSpecializationGrade.setObjectName("editSpecializationGrade")
        self.editSpecializationGrade.textChanged.connect(self.specialization_grade_changed)
        self.labelSpecializationRate = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelSpecializationRate.setGeometry(QtCore.QRect(290, 260, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelSpecializationRate.setFont(font)
        self.labelSpecializationRate.setObjectName("labelSpecializationRate")
        self.labelElective2Rate = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelElective2Rate.setGeometry(QtCore.QRect(290, 195, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelElective2Rate.setFont(font)
        self.labelElective2Rate.setObjectName("labelElective2Rate")
        self.labelElective1Rate = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelElective1Rate.setGeometry(QtCore.QRect(290, 120, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelElective1Rate.setFont(font)
        self.labelElective1Rate.setObjectName("labelElective1Rate")
        self.labelMathRate = QtWidgets.QLabel(self.grpAcademicInfo)
        self.labelMathRate.setGeometry(QtCore.QRect(290, 50, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelMathRate.setFont(font)
        self.labelMathRate.setObjectName("labelMathRate")
        self.grpReport = QtWidgets.QGroupBox(self.centralwidget)
        self.grpReport.setGeometry(QtCore.QRect(440, 170, 341, 181))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.grpReport.setFont(font)
        self.grpReport.setStyleSheet("font: 12pt \"Arial\";")
        self.grpReport.setObjectName("grpReport")
        self.labelAverage = QtWidgets.QLabel(self.grpReport)
        self.labelAverage.setGeometry(QtCore.QRect(10, 30, 150, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelAverage.setFont(font)
        self.labelAverage.setObjectName("labelAverage")
        self.labelAverageRating = QtWidgets.QLabel(self.grpReport)
        self.labelAverageRating.setGeometry(QtCore.QRect(10, 60, 170, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.labelAverageRating.setFont(font)
        self.labelAverageRating.setObjectName("labelAverageRating")
        self.labelVerdict = QtWidgets.QLabel(self.grpReport)
        self.labelVerdict.setGeometry(QtCore.QRect(10, 90, 121, 21))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.labelVerdict.setFont(font)
        self.labelVerdict.setObjectName("labelVerdict")
        self.browserVerdict = QtWidgets.QTextBrowser(self.grpReport)
        self.browserVerdict.setGeometry(QtCore.QRect(10, 110, 321, 61))
        self.browserVerdict.setStyleSheet("QTextBrowser {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background: white;\n"
"    color: black;\n"
"}\n"
"\n"
"QTextBrowser:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.browserVerdict.setObjectName("browserVerdict")
        self.grpButtons = QtWidgets.QGroupBox(self.centralwidget)
        self.grpButtons.setGeometry(QtCore.QRect(440, 360, 341, 111))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        self.grpButtons.setFont(font)
        self.grpButtons.setStyleSheet("font: 12pt \"Arial\";")
        self.grpButtons.setTitle("")
        self.grpButtons.setObjectName("grpButtons")
        self.buttonSubmit = QtWidgets.QPushButton(self.grpButtons)
        self.buttonSubmit.clicked.connect(self.submit)
        self.buttonSubmit.setGeometry(QtCore.QRect(180, 60, 131, 31))
        self.buttonSubmit.setStyleSheet("\n"
"QPushButton {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background-color: rgb(174, 203, 255);\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.buttonSubmit.setObjectName("buttonSubmit")
        self.buttonReset = QtWidgets.QPushButton(self.grpButtons)
        self.buttonReset.clicked.connect(self.reset)
        self.buttonReset.setGeometry(QtCore.QRect(10, 10, 131, 31))
        self.buttonReset.setStyleSheet("\n"
"QPushButton {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background-color: rgb(174, 203, 255);\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.buttonReset.setObjectName("buttonReset")
        self.buttonGenerateReport = QtWidgets.QPushButton(self.grpButtons)
        self.buttonGenerateReport.clicked.connect(self.generate_report)
        self.buttonGenerateReport.setGeometry(QtCore.QRect(180, 10, 131, 31))
        self.buttonGenerateReport.setStyleSheet("\n"
"QPushButton {\n"
"    border: 2px solid white;\n"
"    border-radius: 8px;\n"
"    \n"
"    border-color: rgb(0, 0, 0);\n"
"    padding: 4px;\n"
"    background-color: rgb(174, 203, 255);\n"
"    color: black;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    border: 2px solid #0078D7;\n"
"border-color: rgb(0, 0, 0);\n"
"    background: #E6F7FF;\n"
"}\n"
"")
        self.buttonGenerateReport.setObjectName("buttonGenerateReport")
        StudentWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(StudentWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 793, 21))
        self.menubar.setObjectName("menubar")
        StudentWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(StudentWindow)
        self.statusbar.setObjectName("statusbar")
        StudentWindow.setStatusBar(self.statusbar)

        self.retranslateUi(StudentWindow)
        QtCore.QMetaObject.connectSlotsByName(StudentWindow)

    def retranslateUi(self, StudentWindow):
        _translate = QtCore.QCoreApplication.translate
        StudentWindow.setWindowTitle(_translate("StudentWindow", "Generate Report"))
        self.grpPersonalInfo.setTitle(_translate("StudentWindow", "Personal Info"))
        self.labelName.setText(_translate("StudentWindow", "Name"))
        self.labelLastName.setText(_translate("StudentWindow", "Last Name"))
        self.labelIDNumber.setText(_translate("StudentWindow", "ID Number"))
        self.editIDNumber.setInputMask(_translate("StudentWindow", "######-###-####"))
        self.grpForumInfo.setTitle(_translate("StudentWindow", "Forum Info"))
        self.labelStudentAddress.setText(_translate("StudentWindow", "Student Address"))
        self.labelClass.setText(_translate("StudentWindow", "Class"))
        self.labelGrade.setText(_translate("StudentWindow", "Grade"))
        self.comboClass.setItemText(0, _translate("StudentWindow", "S1"))
        self.comboClass.setItemText(1, _translate("StudentWindow", "S2"))
        self.comboClass.setItemText(2, _translate("StudentWindow", "S3"))
        self.grpAcademicInfo.setTitle(_translate("StudentWindow", "Academic Info"))
        self.labelGradeMath.setText(_translate("StudentWindow", "Grade"))
        self.labelElective1.setText(_translate("StudentWindow", "Elective 1"))
        self.labelMath.setText(_translate("StudentWindow", "Mathematics"))
        self.comboMathematics.setItemText(0, _translate("StudentWindow", "Mathematics"))
        self.comboMathematics.setItemText(1, _translate("StudentWindow", "Mathematical Literacy"))
        self.comboMathematics.setItemText(2, _translate("StudentWindow", "Advanced Placement Mathematics"))
        self.labelElective2.setText(_translate("StudentWindow", "Elective 2"))
        self.labelSpecialization.setText(_translate("StudentWindow", "Specialization"))
        self.labelGradeElective1.setText(_translate("StudentWindow", "Grade"))
        self.labelGradeElective2.setText(_translate("StudentWindow", "Grade"))
        self.labelSpecializationGrade.setText(_translate("StudentWindow", "Grade"))
        self.labelSpecializationRate.setText(_translate("StudentWindow", "Rating: Ungraded"))
        self.labelElective2Rate.setText(_translate("StudentWindow", "Rating: Ungraded"))
        self.labelElective1Rate.setText(_translate("StudentWindow", "Rating: Ungraded"))
        self.labelMathRate.setText(_translate("StudentWindow", "Rating: Ungraded"))
        self.grpReport.setTitle(_translate("StudentWindow", "Report"))
        self.labelAverage.setText(_translate("StudentWindow", "Average:"))
        self.labelAverageRating.setText(_translate("StudentWindow", "Average Rating:"))
        self.labelVerdict.setText(_translate("StudentWindow", "Verdict:"))
        self.buttonSubmit.setText(_translate("StudentWindow", "Submit"))
        self.buttonReset.setText(_translate("StudentWindow", "Reset"))
        self.buttonGenerateReport.setText(_translate("StudentWindow", "Generate Report"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    StudentWindow = QtWidgets.QMainWindow()
    ui = Ui_StudentWindow()
    ui.setupUi(StudentWindow)
    StudentWindow.show()
    sys.exit(app.exec_())
